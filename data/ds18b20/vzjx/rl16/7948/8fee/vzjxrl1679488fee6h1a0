{"data":{"timer":[{"name":"addavailablecontrols","id":"vhoiyj167955e085fo75"},{"name":"log","id":"ilzjyr168fd849e17o1489"}],"css":".dialgoeshere{\n  width:140px;\n  height:140px;\n  display:inline-block;\n}\n\n.sensorgraph{\n  display: none;\n  position: fixed;\n  top:0px;\n  left:0px;\n  bottom:0px;\n  right:0px;\n  overflow: hidden;\n  background-color: #000a;\n}\n\n.selectoffset{\n  position: absolute;\n  top:60px;\n}\n","data":[],"name":"ds18b20","js":"var me = this;\nvar ME = $('#'+me.UUID)[0];\n\nme.data = {};\n\nif (ME.DATA.peer){\n  if (ME.DATA.peer != 'local') me.peer = ME.DATA.peer;\n}\nelse me.peer = typeof CURRENTDEVICEID == 'undefined' ? null : CURRENTDEVICEID;\n\nme.ready = function(){\n  componentHandler.upgradeAllRegistered();\n  send_init(function(result){\n    if (ME.DATA.serial) installDial(ME.DATA.serial);\n    else send_list(function(result){\n      ME.DATA.serial = result.data.list[0];\n      installDial(result.data.list[0]);\n    }, me.peer);\n    $(ME).find('.closegraphbutton').click(hideGraph); \n    $(ME).find('.dialgoeshere').click(showGraph); \n    $(ME).find('.plotdur').change(showGraph);\n  }, me.peer);\n};\n\nfunction installDial(id){\n  send_read(id, function(result){\n    var title = ME.DATA.title ? ME.DATA.title : \"Temperature\";\n    ME.DATA.title = title;\n    var d = {\n      id: id,\n      value: result.data.f.toFixed(1),\n      units: \"f\",\n      title: title,\n      range: [-30,130]\n    };\n    var el = $('<div class=\"ds18b20 iconmode\"/>');\n    $(ME).find('.dialgoeshere').html(el);\n    el.data(\"data\", d);\n    installControl(el[0], \"metabot\", \"dial\", function(api){\n      updateDial(el);\n    }, d);\n  }, me.peer);\n}\n\nfunction updateDial(el){\n  if ($('#'+me.UUID)[0] == ME){\n    var d = el.data(\"data\");\n    var api = el[0].api;\n    send_read(d.id, function(result){\n      api.update(result.data.f.toFixed(1));\n      setTimeout(function(){\n        updateDial(el);\n      }, 3000);\n    }, me.peer);\n  }\n}\n\nfunction hideGraph(){\n  $(ME).find('.sensorgraph').css('display', 'none');\n}\n\nfunction showGraph(){\n  \n  var days = Number($(ME).find('.sensorgraph').find('select').val());\n  if (!me.timeoffset) me.timeoffset = 0;\n  \n  $(ME).find('.sensorgraph').css('display', 'block');\n//  $(ME).removeClass('iconmode');\n//  $(ME).find('.sensorgraph').addClass('fullscreenmode');\n  \n  var d = new Date();\n  var end = d.getTime() + me.timeoffset;\n  var start = end - (1000 * 60 * 60 * 24 * days);\n  var stop = end  + 5000;\n  var mod = Math.max(1, Math.floor((stop - start) / (60 * 60 * 1000)));\n    \n  console.log(d.getTime());\n  console.log(me.timeoffset);\n\n  $(window).resize();\n  \n  var labels = [];\n  var datasets = [{\n    fill: true,\n    backgroundColor: \"rgba(75,140,42,0.2)\",\n    borderColor: \"rgba(75,140,42,1)\",\n    pointBackgroundColor: \"rgba(75,140,42,0.5)\",\n    pointBorderColor: \"#fff\",\n    data: []\n  }];\n  \n  me.chartdata = {\n    labels: labels,\n    datasets: datasets\n  };\n  \n  drawChart(me.chartdata);\n\n  \n  send_getlogdata(start, stop, mod, ME.DATA.serial, function(result){\n    if (result.status != 'ok'){\n      //showGraph();\n      alert(result.msg);\n    }\n    else {\n  //    console.log(result);\n      \n      for (var i=0;i<result.data.list.length;i++) {\n        if (i%5 == 0) \n          labels.push(parseDate(new Date(result.data.list[i][0])));\n        else labels.push('');\n        datasets[0].data.push(recalculate(result.data.list[i][1]));\n  //      console.log(result.data.list[i]);\n      }\n  \n      me.chartdata = {\n          labels: labels,\n          datasets: datasets\n      };\n      \n      drawChart(me.chartdata);\n    }\n  }, me.peer);\n  \n}\n\nfunction drawChart(data){\n  var el = $(ME).find('.ds18b20graphctl')[0];\n  installControl(el, 'raspberrypi', 'linegraph', function(api){}, data);\n}\n\nfunction recalculate(val){\n//  var d = me.data.calibration;\n//  var b = (d[1][1] - d[0][1]) / (d[1][0] - d[0][0]);\n//  var a = (0-d[0][0])*b+d[0][1];\n//  val = (val * b + a);\n//  return val.toFixed(1);\n  console.log(val);\n  return parseFloat(val);\n}\n\n$(document).click(function(event) {\n   window.lastElementClicked = event.target;\n});\n","groups":"anonymous","ctl":"vzjxrl1679488fee6h1a0","html":"<div class='dialgoeshere'><img src='../botmanager/asset/ds18b20/photo-222.gif'><\/div>\n<div class='sensorgraph'>\n  <div class='selectoffset'>\n    <button class=\"mdl-button mdl-js-button mdl-button--fab mdl-button--mini-fab mdl-button--colored closegraphbutton\">\n      <i class=\"material-icons\">close<\/i>\n    <\/button>\n    <select class=\"plotdur\"><option value=\"0.05\">1 Hour<\/option><option value=\"0.1\">2 Hours<\/option><option value=\"0.25\">6 Hours<\/option><option value=\"0.5\">12 Hours<\/option><option value=\"1\" selected>24 Hours<\/option><option value=\"2\">48 Hours<\/option><option value=\"7\">1 Week<\/option><option value=\"30\">1 Month<\/option><option value=\"91\">3 Months<\/option><option value=\"182\">6 Months<\/option><option value=\"365\">1 Year<\/option><\/select>\n  <\/div>\n  <div class='ds18b20graphctl'/>\n<\/div>\n","cmd":[{"java":"xvlvin167948b4da4n1cf","name":"init","id":"yphryt167948b4dbdx1d0"},{"java":"ukrvpw167949056eam238","name":"list","id":"ookitt167949056f9i239"},{"java":"xplgzk167949a7887j308","name":"read","id":"nhiiqg167949a7895z309"},{"java":"qxvmkj167955cca6cw5d","name":"addavailablecontrols","id":"sotyto167955cca7bk5e"},{"java":"mtvoqq168fd2b4f82i90e","name":"log","id":"kwnkmh168fd2b4f84r90f"},{"java":"luyhql1724748e297ndda","name":"getlogdata","id":"zhitwz1724748e29bsddb"}],"three":{"controls":[]},"db":"ds18b20","desc":""},"readers":["anonymous"],"id":"vzjxrl1679488fee6h1a0","sessionid":"ypkxqn1733445ba12n66","time":1604328315115,"addr":"/192.168.0.14:63516","username":"admin"}